import requests
from bs4 import BeautifulSoup


class ExploitGrabber(object):
    """
    Base class for remote exploit grabber
    """
    def __init__(self):
        self.url = ""

    def search(self, module_name):
        raise NotImplementedError()


class ExploitDBGrabber(ExploitGrabber):
    """
    Search sploits on Exploit-db
    """
    def __init__(self):
        self.url = 'http://www.exploit-db.com/search/'

    def search(self, module_name):
        sploits = []
        args = {'action': 'search',
                'filter_description': 'wordpress %s' % module_name}
        response = requests.get(self.url, params=args)
        soup = BeautifulSoup(response.text)
        exploit_table = soup.find("table", {"class": "exploit_list"})
        exploit_data = exploit_table.find("tbody")
        for row in exploit_data.findAll("tr"):
            try:
                date = row.find("td", {'class': 'list_explot_date'}).getText()
                description_cell = row.find("td",
                                            {'class': 'list_explot_description'})
                description = description_cell.find("a").getText()
                link = description_cell.find("a")["href"]
                sploits.append("%s : %s (%s)" % (date, description, link))
            except:
                # Silently pass, parsing html is a pain in the ass
                pass
        return sploits
